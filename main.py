import os 
import streamlit as st

import google.generativeai as genai

# loading the invironment variables
from dotenv import load_dotenv
load_dotenv()

my_api_key = os.getenv("GOOGLE_API_KEY")

# configure the generative ai model with the retrieved api key
genai.configure(api_key = my_api_key)

# define out desired model
model = genai.GenerativeModel('gemini-1.5-flash')
chat = model.start_chat(history = [])

# define a fuction that gemini will respond through \
def get_gemini_response(question):
    response = chat.send_message(question, stream = True)
    return response

# create the streamlit app
st.set_page_config(page_title = 'Gemini Chatbot', page_icon = 'ðŸ¤–')
st.title('Gemini Chat Application')

# initilize the session state if chat history is empty using st.session_state 
if "chat_history" not in st.session_state:
    st.session_state['chat_history'] = []
with st.form(key = "input", clear_on_submit= True):
    user_quest = st.text_input('Enter your question here:', key = 'input'    ,placeholder = 'Type here...')
    submit_button = st.form_submit_button('send')
if  submit_button and not user_quest:
    st.info('Please enter your question and click the send button below.')
if user_quest and submit_button:
    st.session_state.chat_history.append(("You: ",user_quest))    
    response = get_gemini_response(user_quest)
    st.subheader('Answer:')
    answer =''
    for chunk in response:
        answer += chunk.text
    st.write(answer)

    st.session_state.chat_history.append(("Gemeni:", answer))


if len(st.session_state['chat_history']) > 0:
    st.subheader('chat History:')
    for role, text in st.session_state.chat_history:
        st.markdown(f'<span style = "font-weight: bold; font-size: 1.3em;">{role}</span> {text}', unsafe_allow_html = True)
else:
    st.markdown('<div style="height: 300px;"></div>', unsafe_allow_html=True) 
    st.info('This bot uses the Google\'s Generative AI model, gemini-1.5-flash, developed by Kaletsidik. The model generates text based on the given input. The text generated by the model is not guaranteed to be accurate or helpful. If you need help with a specific issue, feel free to ask.')
    st.markdown('---')
    st.success("Made By Eyosias Mulugeta Â©2024")
